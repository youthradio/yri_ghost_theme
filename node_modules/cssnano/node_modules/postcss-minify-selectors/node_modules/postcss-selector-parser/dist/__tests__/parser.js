'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _tape = require('tape');

var _tape2 = _interopRequireDefault(_tape);

var _index = require('../index');

var _index2 = _interopRequireDefault(_index);

(0, _tape2['default'])('parser#attribute', function (t) {
    var node = _index2['default'].attribute({ attribute: 'href' });
    t.plan(1);
    t.equal(String(node), '[href]');
});

(0, _tape2['default'])('parser#className', function (t) {
    var node = _index2['default'].className({ value: 'classy' });
    t.plan(1);
    t.equal(String(node), '.classy');
});

(0, _tape2['default'])('parser#combinator', function (t) {
    var node = _index2['default'].combinator({ value: '>>' });
    t.plan(1);
    t.equal(String(node), '>>');
});

(0, _tape2['default'])('parser#comment', function (t) {
    var node = _index2['default'].combinator({ value: '/* comment */' });
    t.plan(1);
    t.equal(String(node), '/* comment */');
});

(0, _tape2['default'])('parser#id', function (t) {
    var node = _index2['default'].id({ value: 'test' });
    t.plan(1);
    t.equal(String(node), '#test');
});

(0, _tape2['default'])('parser#pseudo', function (t) {
    var node = _index2['default'].pseudo({ value: '::before' });
    t.plan(1);
    t.equal(String(node), '::before');
});

(0, _tape2['default'])('parser#tag', function (t) {
    var node = _index2['default'].tag({ value: 'button' });
    t.plan(1);
    t.equal(String(node), 'button');
});

(0, _tape2['default'])('parser#tag', function (t) {
    var node = _index2['default'].universal();
    t.plan(1);
    t.equal(String(node), '*');
});

(0, _tape2['default'])('construct a whole tree', function (t) {
    var root = _index2['default'].root();
    var selector = _index2['default'].selector();
    selector.append(_index2['default'].id({ value: 'tree' }));
    root.append(selector);
    t.plan(1);
    t.equal(String(root), '#tree');
});

(0, _tape2['default'])('no operation', function (t) {
    t.plan(1);
    t.doesNotThrow(function () {
        return (0, _index2['default'])().process('h1 h2 h3').result;
    });
});